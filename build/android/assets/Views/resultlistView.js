module.exports = function (docs) {
  var $ = Ti.UI.createListView({
    top: 0,
    backgroundImage: "/assets/bg.jpg",
    templates: {
      'docs': require("Views/TEMPLATES").docs },

    defaultItemTemplate: 'docs',
    sections: [Ti.UI.createListSection()] });

  $.setData = function (docs) {
    if (docs && Array.isArray(docs)) {
      function getItem(item) {
        //	Log(item);
        var image = "";
        if (item.collection.match(/UKE/))
        image = "/assets/collections/uke.png";
        if (item.collection.match(/TUHH/))
        image = "/assets/collections/tuhh.png";
        if (item.collection.match(/ UHH/))
        image = "/assets/collections/uhh.png";
        if (item.collection.match(/ HAW/))
        image = "/assets/collections/haw.png";
        if (item.collection.match(/ HCU/))
        image = "/assets/collections/hcu.png";
        if (item.collection.match(/ HSU/))
        image = "/assets/collections/hsu.png";
        if (item.collection.match(/DKRZ/))
        image = "/assets/collections/dkrz.png";
        var creatorname = "";
        if (Array.isArray(item.creatorName)) {
          if (item.creatorName.length > 7) {
            creatorname = item.creatorName.slice(0, 7).join('; ') + ' …';
          } else
          creatorname = item.creatorName.join('; ');
        } else creatorname = item.creatorName;
        return {
          properties: {
            accessoryType: Ti.UI.LIST_ACCESSORY_TYPE_DISCLOSURE,
            itemId: JSON.stringify(item) },

          snippet: {
            text: item.title[0] },

          title: {
            text: creatorname },

          logo: {
            backgroundImage: image },

          foot: {
            text: item.publicationYear + ", " + item.internal_institution },

          orcid: {
            visible: item.creatorNameURI ? true : false } };


      }


      $.sections[0].setItems(docs.map(getItem));
    } else
    Log("docs is not an array");
  };
  if (docs)
  $.setData(docs);
  Log(">>>> resultlistview created");
  return $;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3VsdGxpc3RWaWV3LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJkb2NzIiwiJCIsIlRpIiwiVUkiLCJjcmVhdGVMaXN0VmlldyIsInRvcCIsImJhY2tncm91bmRJbWFnZSIsInRlbXBsYXRlcyIsInJlcXVpcmUiLCJkZWZhdWx0SXRlbVRlbXBsYXRlIiwic2VjdGlvbnMiLCJjcmVhdGVMaXN0U2VjdGlvbiIsInNldERhdGEiLCJBcnJheSIsImlzQXJyYXkiLCJnZXRJdGVtIiwiaXRlbSIsImltYWdlIiwiY29sbGVjdGlvbiIsIm1hdGNoIiwiY3JlYXRvcm5hbWUiLCJjcmVhdG9yTmFtZSIsImxlbmd0aCIsInNsaWNlIiwiam9pbiIsInByb3BlcnRpZXMiLCJhY2Nlc3NvcnlUeXBlIiwiTElTVF9BQ0NFU1NPUllfVFlQRV9ESVNDTE9TVVJFIiwiaXRlbUlkIiwiSlNPTiIsInN0cmluZ2lmeSIsInNuaXBwZXQiLCJ0ZXh0IiwidGl0bGUiLCJsb2dvIiwiZm9vdCIsInB1YmxpY2F0aW9uWWVhciIsImludGVybmFsX2luc3RpdHV0aW9uIiwib3JjaWQiLCJ2aXNpYmxlIiwiY3JlYXRvck5hbWVVUkkiLCJzZXRJdGVtcyIsIm1hcCIsIkxvZyJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFTQyxJQUFULEVBQWU7QUFDL0IsTUFBSUMsQ0FBQyxHQUFHQyxFQUFFLENBQUNDLEVBQUgsQ0FBTUMsY0FBTixDQUFxQjtBQUM1QkMsSUFBQUEsR0FBRyxFQUFHLENBRHNCO0FBRTVCQyxJQUFBQSxlQUFlLEVBQUcsZ0JBRlU7QUFHNUJDLElBQUFBLFNBQVMsRUFBRztBQUNYLGNBQVNDLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCUixJQUR6QixFQUhnQjs7QUFNNUJTLElBQUFBLG1CQUFtQixFQUFHLE1BTk07QUFPNUJDLElBQUFBLFFBQVEsRUFBRyxDQUFDUixFQUFFLENBQUNDLEVBQUgsQ0FBTVEsaUJBQU4sRUFB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SSxDQUFDMEMsR0FBTCxDQUFTM0IsT0FBVCxDQUF2QjtBQUNBLEtBbEREO0FBbURDNEIsSUFBQUEsR0FBRyxDQUFDLHNCQUFELENBQUg7QUFDRCxHQXJERDtBQXNEQSxNQUFJM0MsSUFBSjtBQUNDQyxFQUFBQSxDQUFDLENBQUNXLE9BQUYsQ0FBVVosSUFBVjtBQUNEMkMsRUFBQUEsR0FBRyxDQUFDLDZCQUFELENBQUg7QUFDQSxTQUFPMUMsQ0FBUDtBQUNBLENBcEVEIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihkb2NzKSB7XG5cdHZhciAkID0gVGkuVUkuY3JlYXRlTGlzdFZpZXcoe1xuXHRcdHRvcCA6IDAsXG5cdFx0YmFja2dyb3VuZEltYWdlIDogXCIvYXNzZXRzL2JnLmpwZ1wiLFxuXHRcdHRlbXBsYXRlcyA6IHtcblx0XHRcdCdkb2NzJyA6IHJlcXVpcmUoXCJWaWV3cy9URU1QTEFURVNcIikuZG9jc1xuXHRcdH0sXG5cdFx0ZGVmYXVsdEl0ZW1UZW1wbGF0ZSA6ICdkb2NzJyxcblx0XHRzZWN0aW9ucyA6IFtUaS5VSS5jcmVhdGVMaXN0U2VjdGlvbigpXSxcblx0fSk7XG5cdCQuc2V0RGF0YSA9IGZ1bmN0aW9uKGRvY3MpIHtcblx0XHRpZiAoZG9jcyAmJiBBcnJheS5pc0FycmF5KGRvY3MpKSB7XG5cdFx0XHRmdW5jdGlvbiBnZXRJdGVtKGl0ZW0pIHtcblx0XHRcdFx0Ly9cdExvZyhpdGVtKTtcblx0XHRcdFx0dmFyIGltYWdlID0gXCJcIjtcblx0XHRcdFx0aWYgKGl0ZW0uY29sbGVjdGlvbi5tYXRjaCgvVUtFLykpXG5cdFx0XHRcdFx0aW1hZ2UgPSBcIi9hc3NldHMvY29sbGVjdGlvbnMvdWtlLnBuZ1wiO1xuXHRcdFx0XHRpZiAoaXRlbS5jb2xsZWN0aW9uLm1hdGNoKC9UVUhILykpXG5cdFx0XHRcdFx0aW1hZ2UgPSBcIi9hc3NldHMvY29sbGVjdGlvbnMvdHVoaC5wbmdcIjtcblx0XHRcdFx0aWYgKGl0ZW0uY29sbGVjdGlvbi5tYXRjaCgvIFVISC8pKVxuXHRcdFx0XHRcdGltYWdlID0gXCIvYXNzZXRzL2NvbGxlY3Rpb25zL3VoaC5wbmdcIjtcblx0XHRcdFx0aWYgKGl0ZW0uY29sbGVjdGlvbi5tYXRjaCgvIEhBVy8pKVxuXHRcdFx0XHRcdGltYWdlID0gXCIvYXNzZXRzL2NvbGxlY3Rpb25zL2hhdy5wbmdcIjtcblx0XHRcdFx0aWYgKGl0ZW0uY29sbGVjdGlvbi5tYXRjaCgvIEhDVS8pKVxuXHRcdFx0XHRcdGltYWdlID0gXCIvYXNzZXRzL2NvbGxlY3Rpb25zL2hjdS5wbmdcIjtcblx0XHRcdFx0aWYgKGl0ZW0uY29sbGVjdGlvbi5tYXRjaCgvIEhTVS8pKVxuXHRcdFx0XHRcdGltYWdlID0gXCIvYXNzZXRzL2NvbGxlY3Rpb25zL2hzdS5wbmdcIjtcblx0XHRcdFx0aWYgKGl0ZW0uY29sbGVjdGlvbi5tYXRjaCgvREtSWi8pKVxuXHRcdFx0XHRcdGltYWdlID0gXCIvYXNzZXRzL2NvbGxlY3Rpb25zL2RrcnoucG5nXCI7XG5cdFx0XHRcdHZhciBjcmVhdG9ybmFtZSA9XCJcIjtcdFxuXHRcdFx0XHRpZiBcdChBcnJheS5pc0FycmF5KGl0ZW0uY3JlYXRvck5hbWUpKSB7XG5cdFx0XHRcdFx0aWYgKGl0ZW0uY3JlYXRvck5hbWUubGVuZ3RoPjcpIHtcblx0XHRcdFx0XHRcdGNyZWF0b3JuYW1lID1pdGVtLmNyZWF0b3JOYW1lLnNsaWNlKDAsNykuam9pbignOyAnKSArICfCoOKApic7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2UgY3JlYXRvcm5hbWUgPSBpdGVtLmNyZWF0b3JOYW1lLmpvaW4oJzsgJyk7XG5cdFx0XHRcdH0gZWxzZSBjcmVhdG9ybmFtZSA9IGl0ZW0uY3JlYXRvck5hbWU7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0cHJvcGVydGllcyA6IHtcblx0XHRcdFx0XHRcdGFjY2Vzc29yeVR5cGUgOiBUaS5VSS5MSVNUX0FDQ0VTU09SWV9UWVBFX0RJU0NMT1NVUkUsXG5cdFx0XHRcdFx0XHRpdGVtSWQgOiBKU09OLnN0cmluZ2lmeShpdGVtKSxcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdHNuaXBwZXQgOiB7XG5cdFx0XHRcdFx0XHR0ZXh0IDogaXRlbS50aXRsZVswXVxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0dGl0bGUgOiB7XG5cdFx0XHRcdFx0XHR0ZXh0IDogY3JlYXRvcm5hbWVcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdGxvZ28gOiB7XG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kSW1hZ2UgOiBpbWFnZVxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0Zm9vdCA6IHtcblx0XHRcdFx0XHRcdHRleHQgOiBpdGVtLnB1YmxpY2F0aW9uWWVhciAgK1wiLCBcIiAraXRlbS5pbnRlcm5hbF9pbnN0aXR1dGlvbiBcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdG9yY2lkOiB7XG5cdFx0XHRcdFx0XHR2aXNpYmxlIDogKGl0ZW0uY3JlYXRvck5hbWVVUkkpP3RydWU6ZmFsc2Vcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cblxuXHRcdFx0JC5zZWN0aW9uc1swXS5zZXRJdGVtcyhkb2NzLm1hcChnZXRJdGVtKSk7XG5cdFx0fSBlbHNlXG5cdFx0XHRMb2coXCJkb2NzIGlzIG5vdCBhbiBhcnJheVwiKTtcblx0fTtcblx0aWYgKGRvY3MpXG5cdFx0JC5zZXREYXRhKGRvY3MpO1xuXHRMb2coXCI+Pj4+IHJlc3VsdGxpc3R2aWV3IGNyZWF0ZWRcIik7XHRcblx0cmV0dXJuICQ7XG59O1xuXG4iXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9mdWVyc3QvRG9jdW1lbnRzL01MZWFybmluZy9TY2hhdWZlbnN0ZXIvUmVzb3VyY2VzL1ZpZXdzIn0=
